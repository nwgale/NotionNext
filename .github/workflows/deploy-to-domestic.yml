# .github/workflows/deploy-to-domestic.yml
name: Deploy to Domestic Server

on:
  # Trigger the workflow on push events to the main branch
  push:
    branches:
      - main
  # Allow manual triggering of the workflow
  workflow_dispatch:
  # Automatically run every 6 hours to sync content from Notion
  schedule:
    - cron: '0 */6 * * *'  # Runs at minute 0 of every 6th hour (0:00, 6:00, 12:00, 18:00 UTC)

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Ensure this matches your project's requirement

      # 3. Install dependencies
      - name: Install dependencies
        run: npm install # Or 'yarn install' if you use Yarn

      # 4. Build the static site with Notion API credentials
      - name: Build static files
        run: npm run export
        env:
          # This environment variable is crucial for the static export build
          EXPORT: true
          # Notion Page ID - this should be set in your GitHub repository secrets
          NOTION_PAGE_ID: ${{ secrets.NOTION_PAGE_ID }}
          # Other important environment variables from your Vercel deployment
          NEXT_PUBLIC_THEME: ${{ secrets.NEXT_PUBLIC_THEME || 'simpleFeittt' }}
          NEXT_PUBLIC_LANG: ${{ secrets.NEXT_PUBLIC_LANG || 'zh-CN' }}
          # 规范链接相关环境变量
          NEXT_PUBLIC_CANONICAL_DOMAIN: 'https://tianfei.chat'
          NEXT_PUBLIC_IS_CANONICAL_HOST: 'true'
          # Cusdis评论系统配置
          NEXT_PUBLIC_COMMENT_CUSDIS_APP_ID: '87827ee2-b949-4049-a820-f6eeba80bd37'
          NEXT_PUBLIC_COMMENT_CUSDIS_HOST: 'https://cusdis.com'

      # 5. Ensure target directory exists on remote server
      - name: Create target directory on remote server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          script: |
            /bin/mkdir -p ${{ secrets.REMOTE_TARGET_DIR }}
            
      # 6. Deploy files to server with custom rsync command
      - name: Deploy to Server with rsync
        uses: burnett01/rsync-deployments@7.1.0
        with:
          switches: -avz --delete --rsync-path="/usr/bin/rsync"
          path: out/
          remote_path: ${{ secrets.REMOTE_TARGET_DIR }}
          remote_host: ${{ secrets.REMOTE_HOST }}
          remote_user: ${{ secrets.REMOTE_USER }}
          remote_key: ${{ secrets.REMOTE_SSH_KEY }}